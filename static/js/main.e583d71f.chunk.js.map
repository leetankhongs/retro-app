{"version":3,"sources":["constants/config.js","until/callAPI.js","components/boardItem/index.js","components/inputBoard/index.js","components/boardList/index.js","components/header/styles.js","components/header/index.js","pages/BoardPage/index.js","components/taskItem/index.js","components/inputTask/index.js","components/taskList/index.js","pages/BoardDetailPage/index.js","routes.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","callApi","endpoint","method","body","axios","url","Config","data","catch","err","console","log","BoardItem","props","useState","taskNumber","setTaskNumber","useEffect","APICaller","id","then","res","length","day","Date","to","Card","style","border","CardActionArea","CardContent","Typography","gutterBottom","variant","component","name","Grid","container","justify","item","color","getDate","getMonth","getFullYear","CardActions","Button","size","InputBoard","textField","setTextField","open","setOpen","handleClose","onClick","fullWidth","height","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","margin","label","type","value","onChange","event","target","DialogActions","onReset","BoardList","boards","setBoards","isReset","setIsReset","md","Box","ml","mr","mt","map","board","_id","date","styles","root","flexGrow","title","withStyles","classes","className","AppBar","position","Toolbar","IconButton","edge","aria-label","Fab","BoardPage","TaskItem","backgroundColor","background","padding","description","direction","alignItems","spacing","confirm","onDelete","InputTask","newBorder","noValidate","autoComplete","marginTop","onClicked","TaskList","tasks","setTasks","columns","setColumns","indexAddColumn","setIndex","handleReset","handleClicked","handleDeleteInputTask","column","index","matchBoards","filter","task","xs","mf","mb","dex","BoardDetail","setID","location","URLSearchParams","search","get","routes","path","exact","main","App","result","route","showContentMenus","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e583d71f.chunk.js","sourcesContent":["export const API_URL = 'https://mongodb-retro.herokuapp.com'\r\n","import axios from 'axios';\r\nimport * as Config from '../constants/config'\r\n\r\nconst callApi = (endpoint, method = 'GET', body) =>{\r\n    return axios({\r\n        method: method,\r\n        url: Config.API_URL + '/' + endpoint,\r\n        data: body\r\n    }).catch(err =>{\r\n        console.log(err);\r\n    });\r\n}\r\n\r\nexport default callApi;","import React ,{ useState, useEffect } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nimport APICaller from '../../until/callAPI'\r\n\r\nconst BoardItem = (props) => {\r\n\r\n    const [taskNumber, setTaskNumber] = useState(0);\r\n    useEffect(() => {\r\n        APICaller('tasks/' + props.id, 'GET', null).then(res => {\r\n            setTaskNumber(res.data.length);\r\n        });\r\n    }, [props.id]);\r\n    const day = new Date(props.day);\r\n    return (\r\n        <Link to= {'/boards?id=' + props.id} >\r\n        <Card style = {{border: \"1px solid black\"}}>\r\n            <CardActionArea>\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {props.name}\r\n                    </Typography>\r\n                    <Grid container justify=\"space-between\">\r\n                        <Grid item>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                { day.getDate() + \"/\" + (day.getMonth() + 1) + \"/\" + day.getFullYear()}\r\n                                \r\n                        </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                {taskNumber} tasks\r\n                        </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                   \r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                <Grid container justify=\"space-between\">\r\n                    <Grid item>\r\n                        <Button size=\"small\" color=\"primary\">\r\n                            URL\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button size=\"small\" color=\"primary\">\r\n                            Clone\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardActions>\r\n        </Card >\r\n        </Link>\r\n\r\n    );\r\n}\r\n\r\nexport default BoardItem;","import { useState } from 'react';\r\nimport { Button, Dialog, DialogTitle, DialogContent, TextField, DialogActions    } from '@material-ui/core';\r\n\r\nimport APICaller from '../../until/callAPI'\r\n\r\nconst InputBoard = (props) => {\r\n    const [textField, setTextField] = useState(\"\");\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const handleClick = (event) => {\r\n        if (textField !== \"\") {\r\n            APICaller(\"boards\", \"POST\", {\r\n                name: textField,\r\n            }).then(res => props.onReset())\r\n\r\n            setTextField(\"\")\r\n            setOpen(false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n\r\n        setTextField(value);\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen} fullWidth={true} style={{ height: \"150px\" }}>\r\n                Add Board\r\n                    </Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Board Name\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        value = {textField}\r\n                        onChange = {handleChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                            </Button>\r\n                    <Button onClick={handleClick} color=\"primary\">\r\n                        Subscribe\r\n                            </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InputBoard;","import React, { useState, useEffect } from 'react';\r\nimport BoardItem from './../boardItem/index'\r\nimport { Grid, Box } from '@material-ui/core';\r\n\r\nimport APICaller from '../../until/callAPI'\r\nimport InputBoard from '../inputBoard/index'\r\n\r\nconst BoardList = (props) => {\r\n    const [boards, setBoards] = useState([]);\r\n    const [isReset, setIsReset] = useState(false)\r\n\r\n    useEffect(() => {\r\n        APICaller('boards', 'GET', null).then(res => {\r\n            setBoards(res.data)\r\n        });\r\n    }, [isReset]);\r\n\r\n\r\n    const handleReset = () => {\r\n        setIsReset(!isReset)\r\n    }\r\n\r\n    const createBoardList = () => {\r\n        return (\r\n            boards.map(board => {\r\n                return (\r\n                    <Grid item md={2} key = {board._id}>\r\n                        <Box ml={2} mr={2} mt={2}>\r\n                            <BoardItem name={board.name} id = {board._id} day = {board.date}/>\r\n                        </Box>\r\n                    </Grid>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div style={{ margin: \"5px\" }}>\r\n            <h1>Board List</h1>\r\n            <Grid container>\r\n                <Grid item md={2} >\r\n                    <Box ml={2} mr={2} mt={2}>\r\n                        <InputBoard onReset={handleReset} />\r\n                    </Box>\r\n\r\n                </Grid>\r\n                {createBoardList()}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BoardList;\r\n","const styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n};\r\n\r\nexport default styles;","import React from 'react';\r\nimport { AppBar, Fab, IconButton, Toolbar, Typography, withStyles } from '@material-ui/core';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport styles from './styles'\r\n const Header = (props)=> {\r\n    const {classes} = props;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\"  color=\"inherit\" aria-label=\"menu\">\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Material UI\r\n                    </Typography>\r\n                    <Fab color=\"primary\" size=\"small\">\r\n                        <PersonIcon />\r\n                    </Fab>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(Header);\r\n","import BoardList from './../../components/boardList/index'\r\nimport Header from './../../components/header/index'\r\n\r\n\r\nconst BoardPage = () => {\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <BoardList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BoardPage;","import { IconButton, Grid } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport APICaller from '../../until/callAPI'\r\n\r\nconst TaskItem = (props) => {\r\n\r\n    const handleClick = () => {\r\n\r\n        if (confirm(\"Bạn có muốn xóa board này không?\")) //eslint-disable-line\r\n            APICaller('tasks/' + props.id, 'DELETE', null).then(res => {\r\n                    props.onDelete();\r\n            })\r\n\r\n    }\r\n    return (\r\n\r\n        <Grid container style={{ backgroundColor: props.background, padding: \"5px\" }}>\r\n            <Grid item >\r\n                {props.description}\r\n            </Grid>\r\n            <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"baseline\" spacing={0} >\r\n                <Grid item>\r\n                    <IconButton component=\"span\" size=\"small\">\r\n                        <EditIcon />\r\n                    </IconButton>\r\n                </Grid>\r\n                <Grid item >\r\n                    <IconButton component=\"span\" size=\"small\" onClick={handleClick}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid >\r\n    )\r\n}\r\n\r\nexport default TaskItem;","import { useState } from 'react';\r\nimport { Button, IconButton, Grid, TextField } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport APICaller from '../../until/callAPI'\r\n\r\n\r\nconst InputTask = (props) => {\r\n    const newBorder = \"5px solid \" + props.color;\r\n    const [textField, setTextField] = useState(\"\");\r\n\r\n    const handleClick = (event)=>{\r\n        if(textField !== \"\")\r\n        {\r\n            APICaller(\"tasks\", \"POST\", {\r\n                type: props.value,\r\n                description: textField,\r\n                board: props.board\r\n            }).then(res => props.onClicked())\r\n    \r\n            setTextField(\"\")\r\n        }\r\n        \r\n    }\r\n\r\n    const handleChange = (event) =>{\r\n        const target = event.target;\r\n        const value = target.value;\r\n\r\n        setTextField(value);\r\n        \r\n    }\r\n\r\n    return (\r\n        <Grid container justify=\"center\" style={{ border:  newBorder}} >\r\n            <Grid item md={11} >\r\n                <form noValidate autoComplete=\"off\"  >\r\n                    <TextField id=\"textField\" value = {textField} onChange = {handleChange} label=\"Description\" variant=\"outlined\" size=\"small\" fullWidth style={{ marginTop: \"5px\" }} />\r\n                </form>\r\n            </Grid>\r\n            <Grid item md={11}>\r\n                <Grid container justify=\"space-between\">\r\n                    <Grid item  >\r\n                        <Button variant=\"contained\"  size = \"small\" style = {{margin: \"2px\", backgroundColor: \"#76ff03\"}} onClick = {handleClick}>\r\n                            Add\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <IconButton component=\"span\" size=\"small\" style = {{margin: \"2px\"}} onClick = {()=> props.onDelete()}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default InputTask;","import { useEffect, useState } from 'react';\r\nimport { Button, Grid, Box } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport TaskItem from '../taskItem/index'\r\nimport InputTask from '../inputTask/index'\r\nimport APICaller from '../../until/callAPI'\r\n\r\nconst TaskList = (props) => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [columns, setColumns] = useState([]);\r\n    const [indexAddColumn, setIndex] = useState(-1);\r\n    const [isReset, setIsReset] = useState(false);\r\n\r\n    useEffect(() => {\r\n        APICaller('tasks/' + props.id, 'GET', null).then(res => {\r\n            setTasks(res.data);\r\n        });\r\n\r\n        APICaller('columns', 'GET', null).then(res => {\r\n            setColumns(res.data);\r\n        })\r\n\r\n    }, [isReset, props.id]);\r\n\r\n    const handleClick = (value) => {\r\n        if (value === indexAddColumn) {\r\n            setIndex(-1);\r\n        } else {\r\n            setIndex(value);\r\n        }\r\n    }\r\n\r\n    const handleReset = () => {\r\n        setIsReset(!isReset);\r\n    }\r\n\r\n    const handleClicked = () => {\r\n        setIndex(-1);\r\n        setIsReset(!isReset);\r\n    }\r\n\r\n    const handleDeleteInputTask = () => {\r\n        setIndex(-1);\r\n    }\r\n    const renderBoard = () => {\r\n        return (\r\n            <Grid container  >\r\n                {\r\n                    columns.map((column, index) => {\r\n                        const matchBoards = tasks.filter(task => task.type === column.value);\r\n                        return (\r\n                            <Grid item md={4} xs={12} key={index}  >\r\n                                <Box mf={2} mr={2}>\r\n                                    <div ><h3>{column.label}</h3></div>\r\n\r\n                                    <div >\r\n                                        <Button variant=\"contained\" fullWidth={true} onClick={() => handleClick(column.value)}><AddIcon /></Button>\r\n                                    </div>\r\n\r\n                                    {indexAddColumn === column.value ?\r\n                                        <Box mt={2} mb={2} >\r\n                                            <InputTask color={column.color} value={column.value} onClicked={handleClicked} onDelete={handleDeleteInputTask} board={props.id} />\r\n                                        </Box> : \"\"}\r\n                                    {matchBoards.map((board, dex) => {\r\n                                        return (\r\n                                            <Box mt={2} mb={2} key={dex}>\r\n                                                <TaskItem description={board.description} background={column.color} onDelete={handleReset} id={board._id} />\r\n                                            </Box>\r\n                                        )\r\n                                    })}\r\n                                </Box>\r\n                            </Grid>\r\n                        )\r\n                    })\r\n                }\r\n            </Grid>\r\n        )\r\n    }\r\n    return (\r\n            <div style = {{margin: \"10px\"}}>\r\n                {renderBoard()}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default TaskList;","import { useEffect, useState } from 'react';\r\n\r\nimport TaskList from './../../components/taskList/index'\r\nimport Header from './../../components/header/index'\r\n\r\n\r\nconst BoardDetail = (props) => {\r\n    const [id, setID] = useState(null);\r\n    useEffect(() => {\r\n        console.log(props.location)\r\n        if (props.location) {\r\n            setID(new URLSearchParams(props.location.search).get('id'));\r\n        }\r\n    }, [props.location]);\r\n    console.log(id)\r\n    return (\r\n        <>\r\n            <Header />\r\n            {id !== null? <TaskList id = {id}/>: \"\"}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default BoardDetail;","import React from 'react';\r\nimport BoardPage from './pages/BoardPage/index';\r\nimport BoardDetail from './pages/BoardDetailPage/index'\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        main: ()=> <BoardPage/>\r\n    },\r\n    {\r\n        path: '/boards',\r\n        exact: true,\r\n        main: ({location})=> <BoardDetail location = {location}/>\r\n    }\r\n]\r\n\r\nexport default routes;","import React from 'react';\nimport './App.css';\nimport routes from './routes';\nimport { Switch, BrowserRouter as Router, Route } from 'react-router-dom'\n\nconst App = () => {\n  const showContentMenus = (routes) => {\n    let result = null;\n\n    if (routes.length > 0) {\n      result = routes.map((route, index) => {\n        return <Route key={index}\n          path={route.path}\n          exact={route.exact}\n          component={route.main} />\n\n      })\n    }\n\n    return result\n  }\n\n  return (\n    <Router>\n            <Switch>\n              {showContentMenus(routes)}\n            </Switch>\n    </Router>\n\n  );\n\n  \n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}